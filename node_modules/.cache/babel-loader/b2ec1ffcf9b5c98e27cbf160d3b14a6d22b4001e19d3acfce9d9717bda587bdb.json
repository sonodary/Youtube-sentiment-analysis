{"ast":null,"code":"var _jsxFileName = \"/Users/sonodaryuuichirou/Desktop/practice/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport YoutubeEmbed from \"./youtube_embed\";\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport DataTable from 'react-data-table-component';\n// import DataTable from \"./DataTable\"\n// import {DataGrid} from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [videoData, setVideoData] = useState(null);\n  const [url, setUrl] = useState('');\n  const [comments, setComment] = useState(null);\n  const [commentsList, setCommentsList] = useState(null);\n  const [wordCloudURL, setWordCloudURL] = useState(null);\n  const [pieChartURL, setPieChartURL] = useState(null);\n  const [PieChartExtremeURL, setPieChartExtremeURL] = useState(null);\n  const [extreme, setExtreme] = useState(null);\n  const [eight, setEight] = useState(null);\n  //   const [column, setColumn] = useState(null)\n\n  //   const columns = [\n  //     { field: 'comment', headerName: 'コメント', width: 70 },\n  //     {field: \"extreme_emotion\", headerName: \"ポジ/ネガ/中立\", width: 70},\n  //     {field: \"eight_emotion\", headerName: \"感情分類\", width: 70},\n  //     { field: 'likeCount', headerName: 'いいね数', width: 70 },\n  //     { field: 'updatedAt', headerName: '投稿時間', width: 70 },\n  // ]\n  const columns = [{\n    name: 'Title',\n    selector: row => row.title,\n    sortable: true\n  }, {\n    name: 'Year',\n    selector: row => row.year,\n    sortable: true\n  }];\n  const data = [{\n    id: 1,\n    title: 'Beetlejuice',\n    year: '1988'\n  }, {\n    id: 2,\n    title: 'Ghostbusters',\n    year: '1984'\n  }];\n  //   setColumn(columns)\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Send the video URL to the Flask backend\n    const response_video = await fetch('http://127.0.0.1:5000/api/video-details', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url\n      })\n    });\n\n    // Retrieve the video details from the response\n    const data = await response_video.json();\n    setVideoData(data);\n    const response_comment = await fetch('http://127.0.0.1:5000/api/video-comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url\n      })\n    });\n\n    // Retrieve the comment from the response\n    const comment_response = await response_comment.json();\n    const comment_response_lst = Object.values(comment_response);\n    const tmp = [];\n    comment_response_lst.map(e => tmp.push(e.comment));\n    setComment(comment_response_lst);\n    setCommentsList(tmp);\n\n    // Emotion eight\n    const emotion_dict = new Map([['Joy', 0], ['Sadness', 0], ['Anticipation', 0], ['Surprise', 0], ['Anger', 0], ['Fear', 0], ['Disgust', 0], ['Trust', 0]]);\n    comment_response_lst.map(e => emotion_dict.set(e.eightEmotion, emotion_dict.get(e.eightEmotion) + 1));\n    const emotion_tmp = [];\n    for (let [key, value] of emotion_dict) {\n      emotion_tmp.push([key, value]);\n    }\n    setEight(emotion_tmp);\n\n    // Emotion extreme\n    const extreme_emotion_dict = new Map([[\"positive\", 0], [\"negative\", 0], [\"neutral\", 0]]);\n    comment_response_lst.map(e => extreme_emotion_dict.set(e.extremeEmotion, extreme_emotion_dict.get(e.extremeEmotion) + 1));\n    const extreme_emotion_tmp = [];\n    for (let [key, value] of extreme_emotion_dict) {\n      extreme_emotion_tmp.push([key, value]);\n    }\n    setExtreme(extreme_emotion_tmp);\n  };\n  useEffect(() => {\n    const fetchImage = async () => {\n      const word_cloud_response = await fetch('http://127.0.0.1:5000/api/video-comments-wordCloud', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          commentsList\n        })\n      });\n      const blob = await word_cloud_response.blob();\n      const graphUrlCloud = URL.createObjectURL(blob);\n      setWordCloudURL(graphUrlCloud);\n    };\n    fetchImage();\n  }, [commentsList]);\n  useEffect(() => {\n    const fetchPieChart = async () => {\n      const pieChart_response = await fetch('http://127.0.0.1:5000/api/comments-emotion', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          eight\n        })\n      });\n      const blob = await pieChart_response.blob();\n      const graphUrlPie = URL.createObjectURL(blob);\n      setPieChartURL(graphUrlPie);\n    };\n    fetchPieChart();\n  }, [wordCloudURL]);\n  useEffect(() => {\n    const fetchPieChartExtreme = async () => {\n      const pieChart_response_extreme = await fetch('http://127.0.0.1:5000/api/comments-emotion-extreme', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          extreme\n        })\n      });\n      const blob = await pieChart_response_extreme.blob();\n      const graphUrlPieExtreme = URL.createObjectURL(blob);\n      setPieChartExtremeURL(graphUrlPieExtreme);\n    };\n    fetchPieChartExtreme();\n  }, [pieChartURL]);\n\n  // useEffect(() => {\n  //   const fetchImage = async () => {\n  //     const word_cloud_response = await fetch('http://127.0.0.1:5000/api/video-comments-wordCloud', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ commentsList }),\n  //     });\n  //     const blob = await word_cloud_response.blob();\n  //     const graphUrlCloud = URL.createObjectURL(blob);\n  //     setWordCloudURL(graphUrlCloud);\n  //   }\n  //   const fetchPieChart = async () => {\n  //     const pieChart_response = await fetch('http://127.0.0.1:5000/api/comments-emotion', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ commentsList }),\n  //     });\n  //     const blob = await pieChart_response.blob();\n  //     const graphUrlPie = URL.createObjectURL(blob);\n  //     setPieChartURL(graphUrlPie);\n  //   }\n  //   const fetchPieChartExtreme = async () => {\n  //     const pieChart_response_extreme = await fetch('http://127.0.0.1:5000/api/comments-emotion-extreme', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ commentsList }),\n  //     });\n  //     const blob = await pieChart_response_extreme.blob();\n  //     const graphUrlPieExtreme = URL.createObjectURL(blob);\n  //     setPieChartExtremeURL(graphUrlPieExtreme);\n  //     // const exreme_response = await pieChart_response_extreme.json();\n  //     // setExtreme(exreme_response)\n  //   }\n  //   fetchImage()\n  //   fetchPieChart()\n  //   fetchPieChartExtreme()\n  // }, [commentsList])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Video Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), videoData && comments && commentsList && eight && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '25%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: videoData.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Views: \", videoData.viewCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Likes: \", videoData.likeCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Comments: \", videoData.commentCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this), videoData.videoId && /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n            embedId: videoData.videoId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: wordCloudURL && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: wordCloudURL,\n            alt: \"Word Cloud\",\n            width: 750,\n            height: 700\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            columns: columns,\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [pieChartURL && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pieChartURL,\n            alt: \"Pie Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 27\n          }, this), PieChartExtremeURL && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: PieChartExtremeURL,\n            alt: \"Pie Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), videoData && comments && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YJb+GEuEG1LBXUTArGwJKorHlHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","YoutubeEmbed","Box","Grid","DataTable","jsxDEV","_jsxDEV","App","_s","videoData","setVideoData","url","setUrl","comments","setComment","commentsList","setCommentsList","wordCloudURL","setWordCloudURL","pieChartURL","setPieChartURL","PieChartExtremeURL","setPieChartExtremeURL","extreme","setExtreme","eight","setEight","columns","name","selector","row","title","sortable","year","data","id","handleSubmit","e","preventDefault","response_video","fetch","method","headers","body","JSON","stringify","json","response_comment","comment_response","comment_response_lst","Object","values","tmp","map","push","comment","emotion_dict","Map","set","eightEmotion","get","emotion_tmp","key","value","extreme_emotion_dict","extremeEmotion","extreme_emotion_tmp","fetchImage","word_cloud_response","blob","graphUrlCloud","URL","createObjectURL","fetchPieChart","pieChart_response","graphUrlPie","fetchPieChartExtreme","pieChart_response_extreme","graphUrlPieExtreme","children","onSubmit","type","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","sx","height","container","item","xs","viewCount","likeCount","commentCount","videoId","embedId","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/sonodaryuuichirou/Desktop/practice/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport YoutubeEmbed from \"./youtube_embed\";\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport DataTable from 'react-data-table-component';\n// import DataTable from \"./DataTable\"\n// import {DataGrid} from '@mui/x-data-grid';\n\nconst App = () => {\n  const [videoData, setVideoData] = useState(null);\n  const [url, setUrl] = useState('');\n  const [comments, setComment] = useState(null);\n  const [commentsList, setCommentsList] = useState(null);\n  const [wordCloudURL, setWordCloudURL] = useState(null);\n  const [pieChartURL, setPieChartURL] = useState(null);\n  const [PieChartExtremeURL, setPieChartExtremeURL] = useState(null);\n  const [extreme, setExtreme] = useState(null)\n  const [eight, setEight] = useState(null)\n//   const [column, setColumn] = useState(null)\n\n//   const columns = [\n//     { field: 'comment', headerName: 'コメント', width: 70 },\n//     {field: \"extreme_emotion\", headerName: \"ポジ/ネガ/中立\", width: 70},\n//     {field: \"eight_emotion\", headerName: \"感情分類\", width: 70},\n//     { field: 'likeCount', headerName: 'いいね数', width: 70 },\n//     { field: 'updatedAt', headerName: '投稿時間', width: 70 },\n// ]\nconst columns = [\n  {\n      name: 'Title',\n      selector: row => row.title,\n      sortable: true,\n  },\n  {\n      name: 'Year',\n      selector: row => row.year,\n      sortable: true,\n  },\n];\n\nconst data = [\n  {\n      id: 1,\n      title: 'Beetlejuice',\n      year: '1988',\n  },\n  {\n      id: 2,\n      title: 'Ghostbusters',\n      year: '1984',\n  },\n]\n//   setColumn(columns)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Send the video URL to the Flask backend\n    const response_video = await fetch('http://127.0.0.1:5000/api/video-details', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url }),\n    });\n\n    // Retrieve the video details from the response\n    const data = await response_video.json();\n    setVideoData(data);\n\n    const response_comment = await fetch('http://127.0.0.1:5000/api/video-comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url }),\n    })\n\n\n    // Retrieve the comment from the response\n    const comment_response = await response_comment.json();\n    const comment_response_lst = Object.values(comment_response)\n\n    const tmp = []\n    comment_response_lst.map(e => tmp.push(e.comment))\n    setComment(comment_response_lst);\n    setCommentsList(tmp);\n\n    // Emotion eight\n    const emotion_dict = new Map([['Joy',0], ['Sadness',0], ['Anticipation',0], ['Surprise',0], ['Anger',0], ['Fear',0], ['Disgust',0], ['Trust', 0]])\n    comment_response_lst.map(e => emotion_dict.set(e.eightEmotion, emotion_dict.get(e.eightEmotion)+1))\n    const emotion_tmp = []\n    for (let [key, value] of emotion_dict) {\n      emotion_tmp.push([key, value])\n    }\n    setEight(emotion_tmp);\n\n    // Emotion extreme\n    const extreme_emotion_dict = new Map([[\"positive\",0], [\"negative\",0], [\"neutral\",0]]) \n    comment_response_lst.map(e => extreme_emotion_dict.set(e.extremeEmotion, extreme_emotion_dict.get(e.extremeEmotion)+1))\n    const extreme_emotion_tmp = []\n    for (let [key, value] of extreme_emotion_dict) {\n      extreme_emotion_tmp.push([key, value])\n    }\n    setExtreme(extreme_emotion_tmp);\n    \n  };\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      const word_cloud_response = await fetch('http://127.0.0.1:5000/api/video-comments-wordCloud', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ commentsList }),\n      });\n      const blob = await word_cloud_response.blob();\n      const graphUrlCloud = URL.createObjectURL(blob);\n      setWordCloudURL(graphUrlCloud);\n    }\n\n    fetchImage()\n  }, [commentsList])\n\n\n  useEffect(() => {\n    const fetchPieChart = async () => {\n          const pieChart_response = await fetch('http://127.0.0.1:5000/api/comments-emotion', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ eight }),\n          });\n          const blob = await pieChart_response.blob();\n          const graphUrlPie = URL.createObjectURL(blob);\n          setPieChartURL(graphUrlPie);\n        }\n    fetchPieChart()\n  }, [wordCloudURL])\n\n  useEffect(() => {\n    const fetchPieChartExtreme = async () => {\n    const pieChart_response_extreme = await fetch('http://127.0.0.1:5000/api/comments-emotion-extreme', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ extreme }),\n      });\n      const blob = await pieChart_response_extreme.blob();\n      const graphUrlPieExtreme = URL.createObjectURL(blob);\n      setPieChartExtremeURL(graphUrlPieExtreme);\n    }\n    fetchPieChartExtreme()\n  }, [pieChartURL])\n\n\n  // useEffect(() => {\n  //   const fetchImage = async () => {\n  //     const word_cloud_response = await fetch('http://127.0.0.1:5000/api/video-comments-wordCloud', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ commentsList }),\n  //     });\n  //     const blob = await word_cloud_response.blob();\n  //     const graphUrlCloud = URL.createObjectURL(blob);\n  //     setWordCloudURL(graphUrlCloud);\n  //   }\n  //   const fetchPieChart = async () => {\n  //     const pieChart_response = await fetch('http://127.0.0.1:5000/api/comments-emotion', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ commentsList }),\n  //     });\n  //     const blob = await pieChart_response.blob();\n  //     const graphUrlPie = URL.createObjectURL(blob);\n  //     setPieChartURL(graphUrlPie);\n  //   }\n  //   const fetchPieChartExtreme = async () => {\n  //     const pieChart_response_extreme = await fetch('http://127.0.0.1:5000/api/comments-emotion-extreme', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ commentsList }),\n  //     });\n  //     const blob = await pieChart_response_extreme.blob();\n  //     const graphUrlPieExtreme = URL.createObjectURL(blob);\n  //     setPieChartExtremeURL(graphUrlPieExtreme);\n  //     // const exreme_response = await pieChart_response_extreme.json();\n  //     // setExtreme(exreme_response)\n  //   }\n  //   fetchImage()\n  //   fetchPieChart()\n  //   fetchPieChartExtreme()\n  // }, [commentsList])\n\n\n  return (\n    \n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={url} onChange={(e) => setUrl(e.target.value)} />\n        <button type=\"submit\">Get Video Details</button>\n      </form>\n    {videoData && comments && commentsList && eight &&(\n      <Box sx={{ height: '25%' }}>\n      <Grid container >\n        <Grid item xs={6}>\n        <h2>{videoData.title}</h2>\n          <p>Views: {videoData.viewCount}</p>\n          <p>Likes: {videoData.likeCount}</p>\n          <p>Comments: {videoData.commentCount}</p>\n          {videoData.videoId && <YoutubeEmbed embedId={videoData.videoId} />}\n        </Grid>\n        <Grid item xs={6}>\n          {wordCloudURL && <img src={wordCloudURL} alt=\"Word Cloud\" width={750} height={700}/>}\n        </Grid>\n        <Grid item xs={6}>\n        <DataTable\n            columns={columns}\n            data={data}\n        />\n        {/* <div style={{ height: 400, width: '100%' }}>\n          <DataGrid\n            rows={[{comment: \"やった\", exreme_emotion: \"positive\", eight_emotion: \"Joy\", \"likeCount\": 123, \"updatedAt\": \"2020\"}]}\n            columns={[\n              { field: 'comment', headerName: 'コメント', width: 70 },\n              {field: \"extreme_emotion\", headerName: \"ポジ/ネガ/中立\", width: 70},\n              {field: \"eight_emotion\", headerName: \"感情分類\", width: 70},\n              { field: 'likeCount', headerName: 'いいね数', width: 70 },\n              { field: 'updatedAt', headerName: '投稿時間', width: 70 },\n          ]}\n            initialState={{\n              pagination: {\n                paginationModel: { page: 0, pageSize: 5 },\n              },\n            }}\n            pageSizeOptions={[5, 10]}\n            checkboxSelection\n          />\n        </div> */}\n        {/* {comments.map(e => <li>{e.comment} </li>)} */}\n        </Grid>\n        <Grid item xs={6}>\n          {pieChartURL && <img src={pieChartURL} alt=\"Pie Chart\" />}\n          {PieChartExtremeURL && <img src={PieChartExtremeURL} alt=\"Pie Chart\" />}\n        </Grid>\n      </Grid>\n    </Box>\n    )}\n      {videoData && comments && (\n        <div>\n          \n          \n          \n         \n          {/* <PieChart\n            series={[\n              {\n                data: [\n                  { id: 0, value: 10, label: 'series A' },\n                  { id: 1, value: 15, label: 'series B' },\n                  { id: 2, value: 20, label: 'series C' },\n                ],\n              },\n            ]}\n            width={400}\n            height={200}\n          /> */}\n          {/* <p>{extreme}</p> */}\n        {/* {comment.map(comment=> <p>{comment}</p>)} */}\n        {/* <p>{comments}</p> */}\n        {/* {comments.comment.map((comment, index) => (\n        <div key={index}>\n          <p>{comment}</p>\n          <p>{comments.likeCount[index]}</p>\n          \n        </div>\n        ))} */}\n\n         {/* {comment.comment.map(comment => <li>{comment}</li>)} \n         {comment.likeCount.map(comment => <li>{comment}</li>)}  */}\n                {/* comment.map(Object.values(comment) => \n                <li>{comment.comment}</li>\n                <div>{comment.likeCount}</div>\n                ) */}\n\n          {/* {comment && <p>{comment}</p>} */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}