{"ast":null,"code":"/*\n  Generated by kison.*/\nvar parser = function (undefined) {\n  /*jshint quotmark:false, loopfunc:true, indent:false, unused:false, asi:true, boss:true*/\n  /* Generated by kison */\n  var parser = {},\n    GrammarConst = {\n      'SHIFT_TYPE': 1,\n      'REDUCE_TYPE': 2,\n      'ACCEPT_TYPE': 0,\n      'TYPE_INDEX': 0,\n      'PRODUCTION_INDEX': 1,\n      'TO_INDEX': 2\n    };\n  /*jslint quotmark: false*/\n  function mix(to, from) {\n    for (var f in from) {\n      to[f] = from[f];\n    }\n  }\n  function isArray(obj) {\n    return '[object Array]' === Object.prototype.toString.call(obj);\n  }\n  function each(object, fn, context) {\n    if (object) {\n      var key,\n        val,\n        length,\n        i = 0;\n      context = context || null;\n      if (!isArray(object)) {\n        for (key in object) {\n          // can not use hasOwnProperty\n          if (fn.call(context, object[key], key, object) === false) {\n            break;\n          }\n        }\n      } else {\n        length = object.length;\n        for (val = object[0]; i < length; val = object[++i]) {\n          if (fn.call(context, val, i, object) === false) {\n            break;\n          }\n        }\n      }\n    }\n  }\n  function inArray(item, arr) {\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var Lexer = function Lexer(cfg) {\n    var self = this;\n\n    /*\n    lex rules.\n    @type {Object[]}\n    @example\n    [\n    {\n    regexp:'\\\\w+',\n    state:['xx'],\n    token:'c',\n    // this => lex\n    action:function(){}\n    }\n    ]\n    */\n    self.rules = [];\n    mix(self, cfg);\n\n    /*\n    Input languages\n    @type {String}\n    */\n\n    self.resetInput(self.input);\n  };\n  Lexer.prototype = {\n    'resetInput': function (input) {\n      mix(this, {\n        input: input,\n        matched: '',\n        stateStack: [Lexer.STATIC.INITIAL],\n        match: '',\n        text: '',\n        firstLine: 1,\n        lineNumber: 1,\n        lastLine: 1,\n        firstColumn: 1,\n        lastColumn: 1\n      });\n    },\n    'getCurrentRules': function () {\n      var self = this,\n        currentState = self.stateStack[self.stateStack.length - 1],\n        rules = [];\n      //#JSCOVERAGE_IF\n      if (self.mapState) {\n        currentState = self.mapState(currentState);\n      }\n      each(self.rules, function (r) {\n        var state = r.state || r[3];\n        if (!state) {\n          if (currentState === Lexer.STATIC.INITIAL) {\n            rules.push(r);\n          }\n        } else if (inArray(currentState, state)) {\n          rules.push(r);\n        }\n      });\n      return rules;\n    },\n    'pushState': function (state) {\n      this.stateStack.push(state);\n    },\n    'popState': function (num) {\n      num = num || 1;\n      var ret;\n      while (num--) {\n        ret = this.stateStack.pop();\n      }\n      return ret;\n    },\n    'showDebugInfo': function () {\n      var self = this,\n        DEBUG_CONTEXT_LIMIT = Lexer.STATIC.DEBUG_CONTEXT_LIMIT,\n        matched = self.matched,\n        match = self.match,\n        input = self.input;\n      matched = matched.slice(0, matched.length - match.length);\n      //#JSCOVERAGE_IF 0\n      var past = (matched.length > DEBUG_CONTEXT_LIMIT ? '...' : '') + matched.slice(0 - DEBUG_CONTEXT_LIMIT).replace(/\\n/, ' '),\n        next = match + input;\n      //#JSCOVERAGE_ENDIF\n      next = next.slice(0, DEBUG_CONTEXT_LIMIT) + (next.length > DEBUG_CONTEXT_LIMIT ? '...' : '');\n      return past + next + '\\n' + new Array(past.length + 1).join('-') + '^';\n    },\n    'mapSymbol': function mapSymbolForCodeGen(t) {\n      return this.symbolMap[t];\n    },\n    'mapReverseSymbol': function (rs) {\n      var self = this,\n        symbolMap = self.symbolMap,\n        i,\n        reverseSymbolMap = self.reverseSymbolMap;\n      if (!reverseSymbolMap && symbolMap) {\n        reverseSymbolMap = self.reverseSymbolMap = {};\n        for (i in symbolMap) {\n          reverseSymbolMap[symbolMap[i]] = i;\n        }\n      }\n      //#JSCOVERAGE_IF\n      if (reverseSymbolMap) {\n        return reverseSymbolMap[rs];\n      } else {\n        return rs;\n      }\n    },\n    'lex': function () {\n      var self = this,\n        input = self.input,\n        i,\n        rule,\n        m,\n        ret,\n        lines,\n        rules = self.getCurrentRules();\n      self.match = self.text = '';\n      if (!input) {\n        return self.mapSymbol(Lexer.STATIC.END_TAG);\n      }\n      for (i = 0; i < rules.length; i++) {\n        rule = rules[i];\n        //#JSCOVERAGE_IF 0\n        var regexp = rule.regexp || rule[1],\n          token = rule.token || rule[0],\n          action = rule.action || rule[2] || undefined;\n        //#JSCOVERAGE_ENDIF\n        if (m = input.match(regexp)) {\n          lines = m[0].match(/\\n.*/g);\n          if (lines) {\n            self.lineNumber += lines.length;\n          }\n          mix(self, {\n            firstLine: self.lastLine,\n            lastLine: self.lineNumber + 1,\n            firstColumn: self.lastColumn,\n            lastColumn: lines ? lines[lines.length - 1].length - 1 : self.lastColumn + m[0].length\n          });\n          var match;\n          // for error report\n          match = self.match = m[0];\n\n          // all matches\n          self.matches = m;\n          // may change by user\n          self.text = match;\n          // matched content utils now\n          self.matched += match;\n          ret = action && action.call(self);\n          if (ret === undefined) {\n            ret = token;\n          } else {\n            ret = self.mapSymbol(ret);\n          }\n          input = input.slice(match.length);\n          self.input = input;\n          if (ret) {\n            return ret;\n          } else {\n            // ignore\n            return self.lex();\n          }\n        }\n      }\n    }\n  };\n  Lexer.STATIC = {\n    'INITIAL': 'I',\n    'DEBUG_CONTEXT_LIMIT': 20,\n    'END_TAG': '$EOF'\n  };\n  var lexer = new Lexer({\n    'rules': [['b', /^\\[(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['c', /^(?:[\\t\\r\\n\\f\\x20]*)\\]/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['d', /^(?:[\\t\\r\\n\\f\\x20]*)~=(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['e', /^(?:[\\t\\r\\n\\f\\x20]*)\\|=(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['f', /^(?:[\\t\\r\\n\\f\\x20]*)\\^=(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['g', /^(?:[\\t\\r\\n\\f\\x20]*)\\$=(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['h', /^(?:[\\t\\r\\n\\f\\x20]*)\\*=(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['i', /^(?:[\\t\\r\\n\\f\\x20]*)\\=(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['j', /^(?:(?:[\\w]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))*)\\(/, function () {\n      this.text = this.yy.trim(this.text).slice(0, -1);\n      this.pushState('fn');\n    }], ['k', /^[^\\)]*/, function () {\n      this.popState();\n    }, ['fn']], ['l', /^(?:[\\t\\r\\n\\f\\x20]*)\\)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['m', /^:not\\((?:[\\t\\r\\n\\f\\x20]*)/i, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['n', /^(?:(?:[\\w]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))*)/, function () {\n      this.text = this.yy.unEscape(this.text);\n    }], ['o', /^\"(\\\\\"|[^\"])*\"/, function () {\n      this.text = this.yy.unEscapeStr(this.text);\n    }], ['o', /^'(\\\\'|[^'])*'/, function () {\n      this.text = this.yy.unEscapeStr(this.text);\n    }], ['p', /^#(?:(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))+)/, function () {\n      this.text = this.yy.unEscape(this.text.slice(1));\n    }], ['q', /^\\.(?:(?:[\\w]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))*)/, function () {\n      this.text = this.yy.unEscape(this.text.slice(1));\n    }], ['r', /^(?:[\\t\\r\\n\\f\\x20]*),(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['s', /^::?/, 0], ['t', /^(?:[\\t\\r\\n\\f\\x20]*)\\+(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['u', /^(?:[\\t\\r\\n\\f\\x20]*)>(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['v', /^(?:[\\t\\r\\n\\f\\x20]*)~(?:[\\t\\r\\n\\f\\x20]*)/, function () {\n      this.text = this.yy.trim(this.text);\n    }], ['w', /^\\*/, 0], ['x', /^(?:[\\t\\r\\n\\f\\x20]+)/, 0], ['y', /^./, 0]]\n  });\n  parser.lexer = lexer;\n  lexer.symbolMap = {\n    '$EOF': 'a',\n    'LEFT_BRACKET': 'b',\n    'RIGHT_BRACKET': 'c',\n    'INCLUDES': 'd',\n    'DASH_MATCH': 'e',\n    'PREFIX_MATCH': 'f',\n    'SUFFIX_MATCH': 'g',\n    'SUBSTRING_MATCH': 'h',\n    'ALL_MATCH': 'i',\n    'FUNCTION': 'j',\n    'PARAMETER': 'k',\n    'RIGHT_PARENTHESES': 'l',\n    'NOT': 'm',\n    'IDENT': 'n',\n    'STRING': 'o',\n    'HASH': 'p',\n    'CLASS': 'q',\n    'COMMA': 'r',\n    'COLON': 's',\n    'PLUS': 't',\n    'GREATER': 'u',\n    'TILDE': 'v',\n    'UNIVERSAL': 'w',\n    'S': 'x',\n    'INVALID': 'y',\n    '$START': 'z',\n    'selectors_group': 'aa',\n    'selector': 'ab',\n    'simple_selector_sequence': 'ac',\n    'combinator': 'ad',\n    'type_selector': 'ae',\n    'id_selector': 'af',\n    'class_selector': 'ag',\n    'attrib_match': 'ah',\n    'attrib': 'ai',\n    'attrib_val': 'aj',\n    'pseudo': 'ak',\n    'negation': 'al',\n    'negation_arg': 'am',\n    'suffix_selector': 'an',\n    'suffix_selectors': 'ao'\n  };\n  parser.productions = [['z', ['aa']], ['aa', ['ab'], function () {\n    return [this.$1];\n  }], ['aa', ['aa', 'r', 'ab'], function () {\n    this.$1.push(this.$3);\n  }], ['ab', ['ac']], ['ab', ['ab', 'ad', 'ac'], function () {\n    // LinkedList\n\n    this.$1.nextCombinator = this.$3.prevCombinator = this.$2;\n    var order;\n    order = this.$1.order = this.$1.order || 0;\n    this.$3.order = order + 1;\n    this.$3.prev = this.$1;\n    this.$1.next = this.$3;\n    return this.$3;\n  }], ['ad', ['t']], ['ad', ['u']], ['ad', ['v']], ['ad', ['x'], function () {\n    return ' ';\n  }], ['ae', ['n'], function () {\n    return {\n      t: 'tag',\n      value: this.$1\n    };\n  }], ['ae', ['w'], function () {\n    return {\n      t: 'tag',\n      value: this.$1\n    };\n  }], ['af', ['p'], function () {\n    return {\n      t: 'id',\n      value: this.$1\n    };\n  }], ['ag', ['q'], function () {\n    return {\n      t: 'cls',\n      value: this.$1\n    };\n  }], ['ah', ['f']], ['ah', ['g']], ['ah', ['h']], ['ah', ['i']], ['ah', ['d']], ['ah', ['e']], ['ai', ['b', 'n', 'c'], function () {\n    return {\n      t: 'attrib',\n      value: {\n        ident: this.$2\n      }\n    };\n  }], ['aj', ['n']], ['aj', ['o']], ['ai', ['b', 'n', 'ah', 'aj', 'c'], function () {\n    return {\n      t: 'attrib',\n      value: {\n        ident: this.$2,\n        match: this.$3,\n        value: this.$4\n      }\n    };\n  }], ['ak', ['s', 'j', 'k', 'l'], function () {\n    return {\n      t: 'pseudo',\n      value: {\n        fn: this.$2.toLowerCase(),\n        param: this.$3\n      }\n    };\n  }], ['ak', ['s', 'n'], function () {\n    return {\n      t: 'pseudo',\n      value: {\n        ident: this.$2.toLowerCase()\n      }\n    };\n  }], ['al', ['m', 'am', 'l'], function () {\n    return {\n      t: 'pseudo',\n      value: {\n        fn: 'not',\n        param: this.$2\n      }\n    };\n  }], ['am', ['ae']], ['am', ['af']], ['am', ['ag']], ['am', ['ai']], ['am', ['ak']], ['an', ['af']], ['an', ['ag']], ['an', ['ai']], ['an', ['ak']], ['an', ['al']], ['ao', ['an'], function () {\n    return [this.$1];\n  }], ['ao', ['ao', 'an'], function () {\n    this.$1.push(this.$2);\n  }], ['ac', ['ae']], ['ac', ['ao'], function () {\n    return {\n      suffix: this.$1\n    };\n  }], ['ac', ['ae', 'ao'], function () {\n    return {\n      t: 'tag',\n      value: this.$1.value,\n      suffix: this.$2\n    };\n  }]];\n  parser.table = {\n    'gotos': {\n      '0': {\n        'aa': 8,\n        'ab': 9,\n        'ae': 10,\n        'af': 11,\n        'ag': 12,\n        'ai': 13,\n        'ak': 14,\n        'al': 15,\n        'an': 16,\n        'ao': 17,\n        'ac': 18\n      },\n      '2': {\n        'ae': 20,\n        'af': 21,\n        'ag': 22,\n        'ai': 23,\n        'ak': 24,\n        'am': 25\n      },\n      '9': {\n        'ad': 33\n      },\n      '10': {\n        'af': 11,\n        'ag': 12,\n        'ai': 13,\n        'ak': 14,\n        'al': 15,\n        'an': 16,\n        'ao': 34\n      },\n      '17': {\n        'af': 11,\n        'ag': 12,\n        'ai': 13,\n        'ak': 14,\n        'al': 15,\n        'an': 35\n      },\n      '19': {\n        'ah': 43\n      },\n      '28': {\n        'ab': 46,\n        'ae': 10,\n        'af': 11,\n        'ag': 12,\n        'ai': 13,\n        'ak': 14,\n        'al': 15,\n        'an': 16,\n        'ao': 17,\n        'ac': 18\n      },\n      '33': {\n        'ae': 10,\n        'af': 11,\n        'ag': 12,\n        'ai': 13,\n        'ak': 14,\n        'al': 15,\n        'an': 16,\n        'ao': 17,\n        'ac': 47\n      },\n      '34': {\n        'af': 11,\n        'ag': 12,\n        'ai': 13,\n        'ak': 14,\n        'al': 15,\n        'an': 35\n      },\n      '43': {\n        'aj': 50\n      },\n      '46': {\n        'ad': 33\n      }\n    },\n    'action': {\n      '0': {\n        'b': [1, undefined, 1],\n        'm': [1, undefined, 2],\n        'n': [1, undefined, 3],\n        'p': [1, undefined, 4],\n        'q': [1, undefined, 5],\n        's': [1, undefined, 6],\n        'w': [1, undefined, 7]\n      },\n      '1': {\n        'n': [1, undefined, 19]\n      },\n      '2': {\n        'b': [1, undefined, 1],\n        'n': [1, undefined, 3],\n        'p': [1, undefined, 4],\n        'q': [1, undefined, 5],\n        's': [1, undefined, 6],\n        'w': [1, undefined, 7]\n      },\n      '3': {\n        'a': [2, 9],\n        'r': [2, 9],\n        't': [2, 9],\n        'u': [2, 9],\n        'v': [2, 9],\n        'x': [2, 9],\n        'p': [2, 9],\n        'q': [2, 9],\n        'b': [2, 9],\n        's': [2, 9],\n        'm': [2, 9],\n        'l': [2, 9]\n      },\n      '4': {\n        'a': [2, 11],\n        'r': [2, 11],\n        't': [2, 11],\n        'u': [2, 11],\n        'v': [2, 11],\n        'x': [2, 11],\n        'p': [2, 11],\n        'q': [2, 11],\n        'b': [2, 11],\n        's': [2, 11],\n        'm': [2, 11],\n        'l': [2, 11]\n      },\n      '5': {\n        'a': [2, 12],\n        'r': [2, 12],\n        't': [2, 12],\n        'u': [2, 12],\n        'v': [2, 12],\n        'x': [2, 12],\n        'p': [2, 12],\n        'q': [2, 12],\n        'b': [2, 12],\n        's': [2, 12],\n        'm': [2, 12],\n        'l': [2, 12]\n      },\n      '6': {\n        'j': [1, undefined, 26],\n        'n': [1, undefined, 27]\n      },\n      '7': {\n        'a': [2, 10],\n        'r': [2, 10],\n        't': [2, 10],\n        'u': [2, 10],\n        'v': [2, 10],\n        'x': [2, 10],\n        'p': [2, 10],\n        'q': [2, 10],\n        'b': [2, 10],\n        's': [2, 10],\n        'm': [2, 10],\n        'l': [2, 10]\n      },\n      '8': {\n        'a': [0],\n        'r': [1, undefined, 28]\n      },\n      '9': {\n        'a': [2, 1],\n        'r': [2, 1],\n        't': [1, undefined, 29],\n        'u': [1, undefined, 30],\n        'v': [1, undefined, 31],\n        'x': [1, undefined, 32]\n      },\n      '10': {\n        'a': [2, 38],\n        'r': [2, 38],\n        't': [2, 38],\n        'u': [2, 38],\n        'v': [2, 38],\n        'x': [2, 38],\n        'b': [1, undefined, 1],\n        'm': [1, undefined, 2],\n        'p': [1, undefined, 4],\n        'q': [1, undefined, 5],\n        's': [1, undefined, 6]\n      },\n      '11': {\n        'a': [2, 31],\n        'r': [2, 31],\n        't': [2, 31],\n        'u': [2, 31],\n        'v': [2, 31],\n        'x': [2, 31],\n        'p': [2, 31],\n        'q': [2, 31],\n        'b': [2, 31],\n        's': [2, 31],\n        'm': [2, 31]\n      },\n      '12': {\n        'a': [2, 32],\n        'r': [2, 32],\n        't': [2, 32],\n        'u': [2, 32],\n        'v': [2, 32],\n        'x': [2, 32],\n        'p': [2, 32],\n        'q': [2, 32],\n        'b': [2, 32],\n        's': [2, 32],\n        'm': [2, 32]\n      },\n      '13': {\n        'a': [2, 33],\n        'r': [2, 33],\n        't': [2, 33],\n        'u': [2, 33],\n        'v': [2, 33],\n        'x': [2, 33],\n        'p': [2, 33],\n        'q': [2, 33],\n        'b': [2, 33],\n        's': [2, 33],\n        'm': [2, 33]\n      },\n      '14': {\n        'a': [2, 34],\n        'r': [2, 34],\n        't': [2, 34],\n        'u': [2, 34],\n        'v': [2, 34],\n        'x': [2, 34],\n        'p': [2, 34],\n        'q': [2, 34],\n        'b': [2, 34],\n        's': [2, 34],\n        'm': [2, 34]\n      },\n      '15': {\n        'a': [2, 35],\n        'r': [2, 35],\n        't': [2, 35],\n        'u': [2, 35],\n        'v': [2, 35],\n        'x': [2, 35],\n        'p': [2, 35],\n        'q': [2, 35],\n        'b': [2, 35],\n        's': [2, 35],\n        'm': [2, 35]\n      },\n      '16': {\n        'a': [2, 36],\n        'r': [2, 36],\n        't': [2, 36],\n        'u': [2, 36],\n        'v': [2, 36],\n        'x': [2, 36],\n        'p': [2, 36],\n        'q': [2, 36],\n        'b': [2, 36],\n        's': [2, 36],\n        'm': [2, 36]\n      },\n      '17': {\n        'a': [2, 39],\n        'r': [2, 39],\n        't': [2, 39],\n        'u': [2, 39],\n        'v': [2, 39],\n        'x': [2, 39],\n        'b': [1, undefined, 1],\n        'm': [1, undefined, 2],\n        'p': [1, undefined, 4],\n        'q': [1, undefined, 5],\n        's': [1, undefined, 6]\n      },\n      '18': {\n        'a': [2, 3],\n        'r': [2, 3],\n        't': [2, 3],\n        'u': [2, 3],\n        'v': [2, 3],\n        'x': [2, 3]\n      },\n      '19': {\n        'c': [1, undefined, 36],\n        'd': [1, undefined, 37],\n        'e': [1, undefined, 38],\n        'f': [1, undefined, 39],\n        'g': [1, undefined, 40],\n        'h': [1, undefined, 41],\n        'i': [1, undefined, 42]\n      },\n      '20': {\n        'l': [2, 26]\n      },\n      '21': {\n        'l': [2, 27]\n      },\n      '22': {\n        'l': [2, 28]\n      },\n      '23': {\n        'l': [2, 29]\n      },\n      '24': {\n        'l': [2, 30]\n      },\n      '25': {\n        'l': [1, undefined, 44]\n      },\n      '26': {\n        'k': [1, undefined, 45]\n      },\n      '27': {\n        'a': [2, 24],\n        'r': [2, 24],\n        't': [2, 24],\n        'u': [2, 24],\n        'v': [2, 24],\n        'x': [2, 24],\n        'p': [2, 24],\n        'q': [2, 24],\n        'b': [2, 24],\n        's': [2, 24],\n        'm': [2, 24],\n        'l': [2, 24]\n      },\n      '28': {\n        'b': [1, undefined, 1],\n        'm': [1, undefined, 2],\n        'n': [1, undefined, 3],\n        'p': [1, undefined, 4],\n        'q': [1, undefined, 5],\n        's': [1, undefined, 6],\n        'w': [1, undefined, 7]\n      },\n      '29': {\n        'n': [2, 5],\n        'w': [2, 5],\n        'p': [2, 5],\n        'q': [2, 5],\n        'b': [2, 5],\n        's': [2, 5],\n        'm': [2, 5]\n      },\n      '30': {\n        'n': [2, 6],\n        'w': [2, 6],\n        'p': [2, 6],\n        'q': [2, 6],\n        'b': [2, 6],\n        's': [2, 6],\n        'm': [2, 6]\n      },\n      '31': {\n        'n': [2, 7],\n        'w': [2, 7],\n        'p': [2, 7],\n        'q': [2, 7],\n        'b': [2, 7],\n        's': [2, 7],\n        'm': [2, 7]\n      },\n      '32': {\n        'n': [2, 8],\n        'w': [2, 8],\n        'p': [2, 8],\n        'q': [2, 8],\n        'b': [2, 8],\n        's': [2, 8],\n        'm': [2, 8]\n      },\n      '33': {\n        'b': [1, undefined, 1],\n        'm': [1, undefined, 2],\n        'n': [1, undefined, 3],\n        'p': [1, undefined, 4],\n        'q': [1, undefined, 5],\n        's': [1, undefined, 6],\n        'w': [1, undefined, 7]\n      },\n      '34': {\n        'a': [2, 40],\n        'r': [2, 40],\n        't': [2, 40],\n        'u': [2, 40],\n        'v': [2, 40],\n        'x': [2, 40],\n        'b': [1, undefined, 1],\n        'm': [1, undefined, 2],\n        'p': [1, undefined, 4],\n        'q': [1, undefined, 5],\n        's': [1, undefined, 6]\n      },\n      '35': {\n        'a': [2, 37],\n        'r': [2, 37],\n        't': [2, 37],\n        'u': [2, 37],\n        'v': [2, 37],\n        'x': [2, 37],\n        'p': [2, 37],\n        'q': [2, 37],\n        'b': [2, 37],\n        's': [2, 37],\n        'm': [2, 37]\n      },\n      '36': {\n        'a': [2, 19],\n        'r': [2, 19],\n        't': [2, 19],\n        'u': [2, 19],\n        'v': [2, 19],\n        'x': [2, 19],\n        'p': [2, 19],\n        'q': [2, 19],\n        'b': [2, 19],\n        's': [2, 19],\n        'm': [2, 19],\n        'l': [2, 19]\n      },\n      '37': {\n        'n': [2, 17],\n        'o': [2, 17]\n      },\n      '38': {\n        'n': [2, 18],\n        'o': [2, 18]\n      },\n      '39': {\n        'n': [2, 13],\n        'o': [2, 13]\n      },\n      '40': {\n        'n': [2, 14],\n        'o': [2, 14]\n      },\n      '41': {\n        'n': [2, 15],\n        'o': [2, 15]\n      },\n      '42': {\n        'n': [2, 16],\n        'o': [2, 16]\n      },\n      '43': {\n        'n': [1, undefined, 48],\n        'o': [1, undefined, 49]\n      },\n      '44': {\n        'a': [2, 25],\n        'r': [2, 25],\n        't': [2, 25],\n        'u': [2, 25],\n        'v': [2, 25],\n        'x': [2, 25],\n        'p': [2, 25],\n        'q': [2, 25],\n        'b': [2, 25],\n        's': [2, 25],\n        'm': [2, 25]\n      },\n      '45': {\n        'l': [1, undefined, 51]\n      },\n      '46': {\n        'a': [2, 2],\n        'r': [2, 2],\n        't': [1, undefined, 29],\n        'u': [1, undefined, 30],\n        'v': [1, undefined, 31],\n        'x': [1, undefined, 32]\n      },\n      '47': {\n        'a': [2, 4],\n        'r': [2, 4],\n        't': [2, 4],\n        'u': [2, 4],\n        'v': [2, 4],\n        'x': [2, 4]\n      },\n      '48': {\n        'c': [2, 20]\n      },\n      '49': {\n        'c': [2, 21]\n      },\n      '50': {\n        'c': [1, undefined, 52]\n      },\n      '51': {\n        'a': [2, 23],\n        'r': [2, 23],\n        't': [2, 23],\n        'u': [2, 23],\n        'v': [2, 23],\n        'x': [2, 23],\n        'p': [2, 23],\n        'q': [2, 23],\n        'b': [2, 23],\n        's': [2, 23],\n        'm': [2, 23],\n        'l': [2, 23]\n      },\n      '52': {\n        'a': [2, 22],\n        'r': [2, 22],\n        't': [2, 22],\n        'u': [2, 22],\n        'v': [2, 22],\n        'x': [2, 22],\n        'p': [2, 22],\n        'q': [2, 22],\n        'b': [2, 22],\n        's': [2, 22],\n        'm': [2, 22],\n        'l': [2, 22]\n      }\n    }\n  };\n  parser.parse = function parse(input, filename) {\n    var self = this,\n      lexer = self.lexer,\n      state,\n      symbol,\n      action,\n      table = self.table,\n      gotos = table.gotos,\n      tableAction = table.action,\n      productions = self.productions,\n      valueStack = [null],\n      // for debug info\n      prefix = filename ? 'in file: ' + filename + ' ' : '',\n      stack = [0];\n    lexer.resetInput(input);\n    while (1) {\n      // retrieve state number from top of stack\n      state = stack[stack.length - 1];\n      if (!symbol) {\n        symbol = lexer.lex();\n      }\n      if (symbol) {\n        // read action for current state and first input\n        action = tableAction[state] && tableAction[state][symbol];\n      } else {\n        action = null;\n      }\n      if (!action) {\n        var expected = [],\n          error;\n        //#JSCOVERAGE_IF\n        if (tableAction[state]) {\n          for (var symbolForState in tableAction[state]) {\n            expected.push(self.lexer.mapReverseSymbol(symbolForState));\n          }\n        }\n        error = prefix + 'syntax error at line ' + lexer.lineNumber + ':\\n' + lexer.showDebugInfo() + '\\n' + 'expect ' + expected.join(', ');\n        throw new Error(error);\n      }\n      switch (action[GrammarConst.TYPE_INDEX]) {\n        case GrammarConst.SHIFT_TYPE:\n          stack.push(symbol);\n          valueStack.push(lexer.text);\n\n          // push state\n          stack.push(action[GrammarConst.TO_INDEX]);\n\n          // allow to read more\n          symbol = null;\n          break;\n        case GrammarConst.REDUCE_TYPE:\n          var production = productions[action[GrammarConst.PRODUCTION_INDEX]],\n            reducedSymbol = production.symbol || production[0],\n            reducedAction = production.action || production[2],\n            reducedRhs = production.rhs || production[1],\n            len = reducedRhs.length,\n            i = 0,\n            ret,\n            $$ = valueStack[valueStack.length - len]; // default to $$ = $1\n\n          ret = undefined;\n          self.$$ = $$;\n          for (; i < len; i++) {\n            self['$' + (len - i)] = valueStack[valueStack.length - 1 - i];\n          }\n          if (reducedAction) {\n            ret = reducedAction.call(self);\n          }\n          if (ret !== undefined) {\n            $$ = ret;\n          } else {\n            $$ = self.$$;\n          }\n          stack = stack.slice(0, -1 * len * 2);\n          valueStack = valueStack.slice(0, -1 * len);\n          stack.push(reducedSymbol);\n          valueStack.push($$);\n          var newState = gotos[stack[stack.length - 2]][stack[stack.length - 1]];\n          stack.push(newState);\n          break;\n        case GrammarConst.ACCEPT_TYPE:\n          return $$;\n      }\n    }\n  };\n  return parser;\n}();\nif (typeof module !== 'undefined') {\n  module.exports = parser;\n}","map":{"version":3,"names":["parser","undefined","GrammarConst","mix","to","from","f","isArray","obj","Object","prototype","toString","call","each","object","fn","context","key","val","length","i","inArray","item","arr","l","Lexer","cfg","self","rules","resetInput","input","matched","stateStack","STATIC","INITIAL","match","text","firstLine","lineNumber","lastLine","firstColumn","lastColumn","getCurrentRules","currentState","mapState","r","state","push","pushState","popState","num","ret","pop","showDebugInfo","DEBUG_CONTEXT_LIMIT","slice","past","replace","next","Array","join","mapSymbolForCodeGen","t","symbolMap","mapReverseSymbol","rs","reverseSymbolMap","lex","rule","m","lines","mapSymbol","END_TAG","regexp","token","action","matches","lexer","yy","trim","unEscape","unEscapeStr","productions","$1","$3","nextCombinator","prevCombinator","$2","order","prev","value","ident","$4","toLowerCase","param","suffix","table","parse","filename","symbol","gotos","tableAction","valueStack","prefix","stack","expected","error","symbolForState","Error","TYPE_INDEX","SHIFT_TYPE","TO_INDEX","REDUCE_TYPE","production","PRODUCTION_INDEX","reducedSymbol","reducedAction","reducedRhs","rhs","len","$$","newState","ACCEPT_TYPE","module","exports"],"sources":["/Users/sonodaryuuichirou/Desktop/practice/node_modules/query-selector/lib/query-selector/parser.js"],"sourcesContent":["/*\n  Generated by kison.*/\nvar parser = (function (undefined) {\n    /*jshint quotmark:false, loopfunc:true, indent:false, unused:false, asi:true, boss:true*/\n    /* Generated by kison */\n    var parser = {},\n        GrammarConst = {\n            'SHIFT_TYPE': 1,\n            'REDUCE_TYPE': 2,\n            'ACCEPT_TYPE': 0,\n            'TYPE_INDEX': 0,\n            'PRODUCTION_INDEX': 1,\n            'TO_INDEX': 2\n        };\n    /*jslint quotmark: false*/\n    function mix(to, from) {\n        for (var f in from) {\n            to[f] = from[f];\n        }\n    }\n\n    function isArray(obj) {\n        return '[object Array]' === Object.prototype.toString.call(obj);\n    }\n\n    function each(object, fn, context) {\n        if (object) {\n            var key,\n                val,\n                length,\n                i = 0;\n\n            context = context || null;\n\n            if (!isArray(object)) {\n                for (key in object) {\n                    // can not use hasOwnProperty\n                    if (fn.call(context, object[key], key, object) === false) {\n                        break;\n                    }\n                }\n            } else {\n                length = object.length;\n                for (val = object[0]; i < length; val = object[++i]) {\n                    if (fn.call(context, val, i, object) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function inArray(item, arr) {\n        for (var i = 0, l = arr.length; i < l; i++) {\n            if (arr[i] === item) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var Lexer = function Lexer(cfg) {\n\n        var self = this;\n\n        /*\n     lex rules.\n     @type {Object[]}\n     @example\n     [\n     {\n     regexp:'\\\\w+',\n     state:['xx'],\n     token:'c',\n     // this => lex\n     action:function(){}\n     }\n     ]\n     */\n        self.rules = [];\n\n        mix(self, cfg);\n\n        /*\n     Input languages\n     @type {String}\n     */\n\n        self.resetInput(self.input);\n    };\n    Lexer.prototype = {\n        'resetInput': function (input) {\n            mix(this, {\n                input: input,\n                matched: '',\n                stateStack: [Lexer.STATIC.INITIAL],\n                match: '',\n                text: '',\n                firstLine: 1,\n                lineNumber: 1,\n                lastLine: 1,\n                firstColumn: 1,\n                lastColumn: 1\n            });\n        },\n        'getCurrentRules': function () {\n            var self = this,\n                currentState = self.stateStack[self.stateStack.length - 1],\n                rules = [];\n            //#JSCOVERAGE_IF\n            if (self.mapState) {\n                currentState = self.mapState(currentState);\n            }\n            each(self.rules, function (r) {\n                var state = r.state || r[3];\n                if (!state) {\n                    if (currentState === Lexer.STATIC.INITIAL) {\n                        rules.push(r);\n                    }\n                } else if (inArray(currentState, state)) {\n                    rules.push(r);\n                }\n            });\n            return rules;\n        },\n        'pushState': function (state) {\n            this.stateStack.push(state);\n        },\n        'popState': function (num) {\n            num = num || 1;\n            var ret;\n            while (num--) {\n                ret = this.stateStack.pop();\n            }\n            return ret;\n        },\n        'showDebugInfo': function () {\n            var self = this,\n                DEBUG_CONTEXT_LIMIT = Lexer.STATIC.DEBUG_CONTEXT_LIMIT,\n                matched = self.matched,\n                match = self.match,\n                input = self.input;\n            matched = matched.slice(0, matched.length - match.length);\n            //#JSCOVERAGE_IF 0\n            var past = (matched.length > DEBUG_CONTEXT_LIMIT ? '...' : '') +\n                matched.slice(0 - DEBUG_CONTEXT_LIMIT).replace(/\\n/, ' '),\n                next = match + input;\n            //#JSCOVERAGE_ENDIF\n            next = next.slice(0, DEBUG_CONTEXT_LIMIT) +\n                (next.length > DEBUG_CONTEXT_LIMIT ? '...' : '');\n            return past + next + '\\n' + new Array(past.length + 1).join('-') + '^';\n        },\n        'mapSymbol': function mapSymbolForCodeGen(t) {\n            return this.symbolMap[t];\n        },\n        'mapReverseSymbol': function (rs) {\n            var self = this,\n                symbolMap = self.symbolMap,\n                i,\n                reverseSymbolMap = self.reverseSymbolMap;\n            if (!reverseSymbolMap && symbolMap) {\n                reverseSymbolMap = self.reverseSymbolMap = {};\n                for (i in symbolMap) {\n                    reverseSymbolMap[symbolMap[i]] = i;\n                }\n            }\n            //#JSCOVERAGE_IF\n            if (reverseSymbolMap) {\n                return reverseSymbolMap[rs];\n            } else {\n                return rs;\n            }\n        },\n        'lex': function () {\n            var self = this,\n                input = self.input,\n                i,\n                rule,\n                m,\n                ret,\n                lines,\n                rules = self.getCurrentRules();\n\n            self.match = self.text = '';\n\n            if (!input) {\n                return self.mapSymbol(Lexer.STATIC.END_TAG);\n            }\n\n            for (i = 0; i < rules.length; i++) {\n                rule = rules[i];\n                //#JSCOVERAGE_IF 0\n                var regexp = rule.regexp || rule[1],\n                    token = rule.token || rule[0],\n                    action = rule.action || rule[2] || undefined;\n                //#JSCOVERAGE_ENDIF\n                if ((m = input.match(regexp))) {\n                    lines = m[0].match(/\\n.*/g);\n                    if (lines) {\n                        self.lineNumber += lines.length;\n                    }\n                    mix(self, {\n                        firstLine: self.lastLine,\n                        lastLine: self.lineNumber + 1,\n                        firstColumn: self.lastColumn,\n                        lastColumn: lines ?\n                            lines[lines.length - 1].length - 1 : self.lastColumn + m[0].length\n                    });\n                    var match;\n                    // for error report\n                    match = self.match = m[0];\n\n                    // all matches\n                    self.matches = m;\n                    // may change by user\n                    self.text = match;\n                    // matched content utils now\n                    self.matched += match;\n                    ret = action && action.call(self);\n                    if (ret === undefined) {\n                        ret = token;\n                    } else {\n                        ret = self.mapSymbol(ret);\n                    }\n                    input = input.slice(match.length);\n                    self.input = input;\n\n                    if (ret) {\n                        return ret;\n                    } else {\n                        // ignore\n                        return self.lex();\n                    }\n                }\n            }\n        }\n    };\n    Lexer.STATIC = {\n        'INITIAL': 'I',\n        'DEBUG_CONTEXT_LIMIT': 20,\n        'END_TAG': '$EOF'\n    };\n    var lexer = new Lexer({\n        'rules': [\n            ['b', /^\\[(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['c', /^(?:[\\t\\r\\n\\f\\x20]*)\\]/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['d', /^(?:[\\t\\r\\n\\f\\x20]*)~=(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['e', /^(?:[\\t\\r\\n\\f\\x20]*)\\|=(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['f', /^(?:[\\t\\r\\n\\f\\x20]*)\\^=(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['g', /^(?:[\\t\\r\\n\\f\\x20]*)\\$=(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['h', /^(?:[\\t\\r\\n\\f\\x20]*)\\*=(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['i', /^(?:[\\t\\r\\n\\f\\x20]*)\\=(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['j', /^(?:(?:[\\w]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))*)\\(/,\n                function () {\n                    this.text = this.yy.trim(this.text).slice(0, -1);\n                    this.pushState('fn');\n                }\n            ],\n            ['k', /^[^\\)]*/,\n                function () {\n                    this.popState();\n                },\n                ['fn']\n            ],\n            ['l', /^(?:[\\t\\r\\n\\f\\x20]*)\\)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['m', /^:not\\((?:[\\t\\r\\n\\f\\x20]*)/i,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['n', /^(?:(?:[\\w]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))*)/,\n                function () {\n                    this.text = this.yy.unEscape(this.text);\n                }\n            ],\n            ['o', /^\"(\\\\\"|[^\"])*\"/,\n                function () {\n                    this.text = this.yy.unEscapeStr(this.text);\n                }\n            ],\n            ['o', /^'(\\\\'|[^'])*'/,\n                function () {\n                    this.text = this.yy.unEscapeStr(this.text);\n                }\n            ],\n            ['p', /^#(?:(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))+)/,\n                function () {\n                    this.text = this.yy.unEscape(this.text.slice(1));\n                }\n            ],\n            ['q', /^\\.(?:(?:[\\w]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))(?:[\\w\\d-]|[^\\x00-\\xa0]|(?:\\\\[^\\n\\r\\f0-9a-f]))*)/,\n                function () {\n                    this.text = this.yy.unEscape(this.text.slice(1));\n                }\n            ],\n            ['r', /^(?:[\\t\\r\\n\\f\\x20]*),(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['s', /^::?/, 0],\n            ['t', /^(?:[\\t\\r\\n\\f\\x20]*)\\+(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['u', /^(?:[\\t\\r\\n\\f\\x20]*)>(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['v', /^(?:[\\t\\r\\n\\f\\x20]*)~(?:[\\t\\r\\n\\f\\x20]*)/,\n                function () {\n                    this.text = this.yy.trim(this.text);\n                }\n            ],\n            ['w', /^\\*/, 0],\n            ['x', /^(?:[\\t\\r\\n\\f\\x20]+)/, 0],\n            ['y', /^./, 0]\n        ]\n    });\n    parser.lexer = lexer;\n    lexer.symbolMap = {\n        '$EOF': 'a',\n        'LEFT_BRACKET': 'b',\n        'RIGHT_BRACKET': 'c',\n        'INCLUDES': 'd',\n        'DASH_MATCH': 'e',\n        'PREFIX_MATCH': 'f',\n        'SUFFIX_MATCH': 'g',\n        'SUBSTRING_MATCH': 'h',\n        'ALL_MATCH': 'i',\n        'FUNCTION': 'j',\n        'PARAMETER': 'k',\n        'RIGHT_PARENTHESES': 'l',\n        'NOT': 'm',\n        'IDENT': 'n',\n        'STRING': 'o',\n        'HASH': 'p',\n        'CLASS': 'q',\n        'COMMA': 'r',\n        'COLON': 's',\n        'PLUS': 't',\n        'GREATER': 'u',\n        'TILDE': 'v',\n        'UNIVERSAL': 'w',\n        'S': 'x',\n        'INVALID': 'y',\n        '$START': 'z',\n        'selectors_group': 'aa',\n        'selector': 'ab',\n        'simple_selector_sequence': 'ac',\n        'combinator': 'ad',\n        'type_selector': 'ae',\n        'id_selector': 'af',\n        'class_selector': 'ag',\n        'attrib_match': 'ah',\n        'attrib': 'ai',\n        'attrib_val': 'aj',\n        'pseudo': 'ak',\n        'negation': 'al',\n        'negation_arg': 'am',\n        'suffix_selector': 'an',\n        'suffix_selectors': 'ao'\n    };\n    parser.productions = [\n        ['z', ['aa']],\n        ['aa', ['ab'],\n            function () {\n                return [this.$1];\n            }\n        ],\n        ['aa', ['aa', 'r', 'ab'],\n            function () {\n                this.$1.push(this.$3);\n            }\n        ],\n        ['ab', ['ac']],\n        ['ab', ['ab', 'ad', 'ac'],\n            function () {\n                // LinkedList\n\n                this.$1.nextCombinator = this.$3.prevCombinator = this.$2;\n                var order;\n                order = this.$1.order = this.$1.order || 0;\n                this.$3.order = order + 1;\n                this.$3.prev = this.$1;\n                this.$1.next = this.$3;\n                return this.$3;\n            }\n        ],\n        ['ad', ['t']],\n        ['ad', ['u']],\n        ['ad', ['v']],\n        ['ad', ['x'],\n            function () {\n                return ' ';\n            }\n        ],\n        ['ae', ['n'],\n            function () {\n                return {\n                    t: 'tag',\n                    value: this.$1\n                };\n            }\n        ],\n        ['ae', ['w'],\n            function () {\n                return {\n                    t: 'tag',\n                    value: this.$1\n                };\n            }\n        ],\n        ['af', ['p'],\n            function () {\n                return {\n                    t: 'id',\n                    value: this.$1\n                };\n            }\n        ],\n        ['ag', ['q'],\n            function () {\n                return {\n                    t: 'cls',\n                    value: this.$1\n                };\n            }\n        ],\n        ['ah', ['f']],\n        ['ah', ['g']],\n        ['ah', ['h']],\n        ['ah', ['i']],\n        ['ah', ['d']],\n        ['ah', ['e']],\n        ['ai', ['b', 'n', 'c'],\n            function () {\n                return {\n                    t: 'attrib',\n                    value: {\n                        ident: this.$2\n                    }\n                };\n            }\n        ],\n        ['aj', ['n']],\n        ['aj', ['o']],\n        ['ai', ['b', 'n', 'ah', 'aj', 'c'],\n            function () {\n                return {\n                    t: 'attrib',\n                    value: {\n                        ident: this.$2,\n                        match: this.$3,\n                        value: this.$4\n                    }\n                };\n            }\n        ],\n        ['ak', ['s', 'j', 'k', 'l'],\n            function () {\n                return {\n                    t: 'pseudo',\n                    value: {\n                        fn: this.$2.toLowerCase(),\n                        param: this.$3\n                    }\n                };\n            }\n        ],\n        ['ak', ['s', 'n'],\n            function () {\n                return {\n                    t: 'pseudo',\n                    value: {\n                        ident: this.$2.toLowerCase()\n                    }\n                };\n            }\n        ],\n        ['al', ['m', 'am', 'l'],\n            function () {\n                return {\n                    t: 'pseudo',\n                    value: {\n                        fn: 'not',\n                        param: this.$2\n                    }\n                };\n            }\n        ],\n        ['am', ['ae']],\n        ['am', ['af']],\n        ['am', ['ag']],\n        ['am', ['ai']],\n        ['am', ['ak']],\n        ['an', ['af']],\n        ['an', ['ag']],\n        ['an', ['ai']],\n        ['an', ['ak']],\n        ['an', ['al']],\n        ['ao', ['an'],\n            function () {\n                return [this.$1];\n            }\n        ],\n        ['ao', ['ao', 'an'],\n            function () {\n                this.$1.push(this.$2);\n            }\n        ],\n        ['ac', ['ae']],\n        ['ac', ['ao'],\n            function () {\n                return {\n                    suffix: this.$1\n                };\n            }\n        ],\n        ['ac', ['ae', 'ao'],\n            function () {\n                return {\n                    t: 'tag',\n                    value: this.$1.value,\n                    suffix: this.$2\n                };\n            }\n        ]\n    ];\n    parser.table = {\n        'gotos': {\n            '0': {\n                'aa': 8,\n                'ab': 9,\n                'ae': 10,\n                'af': 11,\n                'ag': 12,\n                'ai': 13,\n                'ak': 14,\n                'al': 15,\n                'an': 16,\n                'ao': 17,\n                'ac': 18\n            },\n            '2': {\n                'ae': 20,\n                'af': 21,\n                'ag': 22,\n                'ai': 23,\n                'ak': 24,\n                'am': 25\n            },\n            '9': {\n                'ad': 33\n            },\n            '10': {\n                'af': 11,\n                'ag': 12,\n                'ai': 13,\n                'ak': 14,\n                'al': 15,\n                'an': 16,\n                'ao': 34\n            },\n            '17': {\n                'af': 11,\n                'ag': 12,\n                'ai': 13,\n                'ak': 14,\n                'al': 15,\n                'an': 35\n            },\n            '19': {\n                'ah': 43\n            },\n            '28': {\n                'ab': 46,\n                'ae': 10,\n                'af': 11,\n                'ag': 12,\n                'ai': 13,\n                'ak': 14,\n                'al': 15,\n                'an': 16,\n                'ao': 17,\n                'ac': 18\n            },\n            '33': {\n                'ae': 10,\n                'af': 11,\n                'ag': 12,\n                'ai': 13,\n                'ak': 14,\n                'al': 15,\n                'an': 16,\n                'ao': 17,\n                'ac': 47\n            },\n            '34': {\n                'af': 11,\n                'ag': 12,\n                'ai': 13,\n                'ak': 14,\n                'al': 15,\n                'an': 35\n            },\n            '43': {\n                'aj': 50\n            },\n            '46': {\n                'ad': 33\n            }\n        },\n        'action': {\n            '0': {\n                'b': [1, undefined, 1],\n                'm': [1, undefined, 2],\n                'n': [1, undefined, 3],\n                'p': [1, undefined, 4],\n                'q': [1, undefined, 5],\n                's': [1, undefined, 6],\n                'w': [1, undefined, 7]\n            },\n            '1': {\n                'n': [1, undefined, 19]\n            },\n            '2': {\n                'b': [1, undefined, 1],\n                'n': [1, undefined, 3],\n                'p': [1, undefined, 4],\n                'q': [1, undefined, 5],\n                's': [1, undefined, 6],\n                'w': [1, undefined, 7]\n            },\n            '3': {\n                'a': [2, 9],\n                'r': [2, 9],\n                't': [2, 9],\n                'u': [2, 9],\n                'v': [2, 9],\n                'x': [2, 9],\n                'p': [2, 9],\n                'q': [2, 9],\n                'b': [2, 9],\n                's': [2, 9],\n                'm': [2, 9],\n                'l': [2, 9]\n            },\n            '4': {\n                'a': [2, 11],\n                'r': [2, 11],\n                't': [2, 11],\n                'u': [2, 11],\n                'v': [2, 11],\n                'x': [2, 11],\n                'p': [2, 11],\n                'q': [2, 11],\n                'b': [2, 11],\n                's': [2, 11],\n                'm': [2, 11],\n                'l': [2, 11]\n            },\n            '5': {\n                'a': [2, 12],\n                'r': [2, 12],\n                't': [2, 12],\n                'u': [2, 12],\n                'v': [2, 12],\n                'x': [2, 12],\n                'p': [2, 12],\n                'q': [2, 12],\n                'b': [2, 12],\n                's': [2, 12],\n                'm': [2, 12],\n                'l': [2, 12]\n            },\n            '6': {\n                'j': [1, undefined, 26],\n                'n': [1, undefined, 27]\n            },\n            '7': {\n                'a': [2, 10],\n                'r': [2, 10],\n                't': [2, 10],\n                'u': [2, 10],\n                'v': [2, 10],\n                'x': [2, 10],\n                'p': [2, 10],\n                'q': [2, 10],\n                'b': [2, 10],\n                's': [2, 10],\n                'm': [2, 10],\n                'l': [2, 10]\n            },\n            '8': {\n                'a': [0],\n                'r': [1, undefined, 28]\n            },\n            '9': {\n                'a': [2, 1],\n                'r': [2, 1],\n                't': [1, undefined, 29],\n                'u': [1, undefined, 30],\n                'v': [1, undefined, 31],\n                'x': [1, undefined, 32]\n            },\n            '10': {\n                'a': [2, 38],\n                'r': [2, 38],\n                't': [2, 38],\n                'u': [2, 38],\n                'v': [2, 38],\n                'x': [2, 38],\n                'b': [1, undefined, 1],\n                'm': [1, undefined, 2],\n                'p': [1, undefined, 4],\n                'q': [1, undefined, 5],\n                's': [1, undefined, 6]\n            },\n            '11': {\n                'a': [2, 31],\n                'r': [2, 31],\n                't': [2, 31],\n                'u': [2, 31],\n                'v': [2, 31],\n                'x': [2, 31],\n                'p': [2, 31],\n                'q': [2, 31],\n                'b': [2, 31],\n                's': [2, 31],\n                'm': [2, 31]\n            },\n            '12': {\n                'a': [2, 32],\n                'r': [2, 32],\n                't': [2, 32],\n                'u': [2, 32],\n                'v': [2, 32],\n                'x': [2, 32],\n                'p': [2, 32],\n                'q': [2, 32],\n                'b': [2, 32],\n                's': [2, 32],\n                'm': [2, 32]\n            },\n            '13': {\n                'a': [2, 33],\n                'r': [2, 33],\n                't': [2, 33],\n                'u': [2, 33],\n                'v': [2, 33],\n                'x': [2, 33],\n                'p': [2, 33],\n                'q': [2, 33],\n                'b': [2, 33],\n                's': [2, 33],\n                'm': [2, 33]\n            },\n            '14': {\n                'a': [2, 34],\n                'r': [2, 34],\n                't': [2, 34],\n                'u': [2, 34],\n                'v': [2, 34],\n                'x': [2, 34],\n                'p': [2, 34],\n                'q': [2, 34],\n                'b': [2, 34],\n                's': [2, 34],\n                'm': [2, 34]\n            },\n            '15': {\n                'a': [2, 35],\n                'r': [2, 35],\n                't': [2, 35],\n                'u': [2, 35],\n                'v': [2, 35],\n                'x': [2, 35],\n                'p': [2, 35],\n                'q': [2, 35],\n                'b': [2, 35],\n                's': [2, 35],\n                'm': [2, 35]\n            },\n            '16': {\n                'a': [2, 36],\n                'r': [2, 36],\n                't': [2, 36],\n                'u': [2, 36],\n                'v': [2, 36],\n                'x': [2, 36],\n                'p': [2, 36],\n                'q': [2, 36],\n                'b': [2, 36],\n                's': [2, 36],\n                'm': [2, 36]\n            },\n            '17': {\n                'a': [2, 39],\n                'r': [2, 39],\n                't': [2, 39],\n                'u': [2, 39],\n                'v': [2, 39],\n                'x': [2, 39],\n                'b': [1, undefined, 1],\n                'm': [1, undefined, 2],\n                'p': [1, undefined, 4],\n                'q': [1, undefined, 5],\n                's': [1, undefined, 6]\n            },\n            '18': {\n                'a': [2, 3],\n                'r': [2, 3],\n                't': [2, 3],\n                'u': [2, 3],\n                'v': [2, 3],\n                'x': [2, 3]\n            },\n            '19': {\n                'c': [1, undefined, 36],\n                'd': [1, undefined, 37],\n                'e': [1, undefined, 38],\n                'f': [1, undefined, 39],\n                'g': [1, undefined, 40],\n                'h': [1, undefined, 41],\n                'i': [1, undefined, 42]\n            },\n            '20': {\n                'l': [2, 26]\n            },\n            '21': {\n                'l': [2, 27]\n            },\n            '22': {\n                'l': [2, 28]\n            },\n            '23': {\n                'l': [2, 29]\n            },\n            '24': {\n                'l': [2, 30]\n            },\n            '25': {\n                'l': [1, undefined, 44]\n            },\n            '26': {\n                'k': [1, undefined, 45]\n            },\n            '27': {\n                'a': [2, 24],\n                'r': [2, 24],\n                't': [2, 24],\n                'u': [2, 24],\n                'v': [2, 24],\n                'x': [2, 24],\n                'p': [2, 24],\n                'q': [2, 24],\n                'b': [2, 24],\n                's': [2, 24],\n                'm': [2, 24],\n                'l': [2, 24]\n            },\n            '28': {\n                'b': [1, undefined, 1],\n                'm': [1, undefined, 2],\n                'n': [1, undefined, 3],\n                'p': [1, undefined, 4],\n                'q': [1, undefined, 5],\n                's': [1, undefined, 6],\n                'w': [1, undefined, 7]\n            },\n            '29': {\n                'n': [2, 5],\n                'w': [2, 5],\n                'p': [2, 5],\n                'q': [2, 5],\n                'b': [2, 5],\n                's': [2, 5],\n                'm': [2, 5]\n            },\n            '30': {\n                'n': [2, 6],\n                'w': [2, 6],\n                'p': [2, 6],\n                'q': [2, 6],\n                'b': [2, 6],\n                's': [2, 6],\n                'm': [2, 6]\n            },\n            '31': {\n                'n': [2, 7],\n                'w': [2, 7],\n                'p': [2, 7],\n                'q': [2, 7],\n                'b': [2, 7],\n                's': [2, 7],\n                'm': [2, 7]\n            },\n            '32': {\n                'n': [2, 8],\n                'w': [2, 8],\n                'p': [2, 8],\n                'q': [2, 8],\n                'b': [2, 8],\n                's': [2, 8],\n                'm': [2, 8]\n            },\n            '33': {\n                'b': [1, undefined, 1],\n                'm': [1, undefined, 2],\n                'n': [1, undefined, 3],\n                'p': [1, undefined, 4],\n                'q': [1, undefined, 5],\n                's': [1, undefined, 6],\n                'w': [1, undefined, 7]\n            },\n            '34': {\n                'a': [2, 40],\n                'r': [2, 40],\n                't': [2, 40],\n                'u': [2, 40],\n                'v': [2, 40],\n                'x': [2, 40],\n                'b': [1, undefined, 1],\n                'm': [1, undefined, 2],\n                'p': [1, undefined, 4],\n                'q': [1, undefined, 5],\n                's': [1, undefined, 6]\n            },\n            '35': {\n                'a': [2, 37],\n                'r': [2, 37],\n                't': [2, 37],\n                'u': [2, 37],\n                'v': [2, 37],\n                'x': [2, 37],\n                'p': [2, 37],\n                'q': [2, 37],\n                'b': [2, 37],\n                's': [2, 37],\n                'm': [2, 37]\n            },\n            '36': {\n                'a': [2, 19],\n                'r': [2, 19],\n                't': [2, 19],\n                'u': [2, 19],\n                'v': [2, 19],\n                'x': [2, 19],\n                'p': [2, 19],\n                'q': [2, 19],\n                'b': [2, 19],\n                's': [2, 19],\n                'm': [2, 19],\n                'l': [2, 19]\n            },\n            '37': {\n                'n': [2, 17],\n                'o': [2, 17]\n            },\n            '38': {\n                'n': [2, 18],\n                'o': [2, 18]\n            },\n            '39': {\n                'n': [2, 13],\n                'o': [2, 13]\n            },\n            '40': {\n                'n': [2, 14],\n                'o': [2, 14]\n            },\n            '41': {\n                'n': [2, 15],\n                'o': [2, 15]\n            },\n            '42': {\n                'n': [2, 16],\n                'o': [2, 16]\n            },\n            '43': {\n                'n': [1, undefined, 48],\n                'o': [1, undefined, 49]\n            },\n            '44': {\n                'a': [2, 25],\n                'r': [2, 25],\n                't': [2, 25],\n                'u': [2, 25],\n                'v': [2, 25],\n                'x': [2, 25],\n                'p': [2, 25],\n                'q': [2, 25],\n                'b': [2, 25],\n                's': [2, 25],\n                'm': [2, 25]\n            },\n            '45': {\n                'l': [1, undefined, 51]\n            },\n            '46': {\n                'a': [2, 2],\n                'r': [2, 2],\n                't': [1, undefined, 29],\n                'u': [1, undefined, 30],\n                'v': [1, undefined, 31],\n                'x': [1, undefined, 32]\n            },\n            '47': {\n                'a': [2, 4],\n                'r': [2, 4],\n                't': [2, 4],\n                'u': [2, 4],\n                'v': [2, 4],\n                'x': [2, 4]\n            },\n            '48': {\n                'c': [2, 20]\n            },\n            '49': {\n                'c': [2, 21]\n            },\n            '50': {\n                'c': [1, undefined, 52]\n            },\n            '51': {\n                'a': [2, 23],\n                'r': [2, 23],\n                't': [2, 23],\n                'u': [2, 23],\n                'v': [2, 23],\n                'x': [2, 23],\n                'p': [2, 23],\n                'q': [2, 23],\n                'b': [2, 23],\n                's': [2, 23],\n                'm': [2, 23],\n                'l': [2, 23]\n            },\n            '52': {\n                'a': [2, 22],\n                'r': [2, 22],\n                't': [2, 22],\n                'u': [2, 22],\n                'v': [2, 22],\n                'x': [2, 22],\n                'p': [2, 22],\n                'q': [2, 22],\n                'b': [2, 22],\n                's': [2, 22],\n                'm': [2, 22],\n                'l': [2, 22]\n            }\n        }\n    };\n    parser.parse = function parse(input, filename) {\n        var self = this,\n            lexer = self.lexer,\n            state,\n            symbol,\n            action,\n            table = self.table,\n            gotos = table.gotos,\n            tableAction = table.action,\n            productions = self.productions,\n            valueStack = [null],\n            // for debug info\n            prefix = filename ? ('in file: ' + filename + ' ') : '',\n            stack = [0];\n\n        lexer.resetInput(input);\n\n        while (1) {\n            // retrieve state number from top of stack\n            state = stack[stack.length - 1];\n\n            if (!symbol) {\n                symbol = lexer.lex();\n            }\n\n            if (symbol) {\n                // read action for current state and first input\n                action = tableAction[state] && tableAction[state][symbol];\n            } else {\n                action = null;\n            }\n\n            if (!action) {\n                var expected = [],\n                    error;\n                //#JSCOVERAGE_IF\n                if (tableAction[state]) {\n                    for (var symbolForState in tableAction[state]) {\n                        expected.push(self.lexer.mapReverseSymbol(symbolForState));\n                    }\n                }\n                error = prefix + 'syntax error at line ' + lexer.lineNumber +\n                    ':\\n' + lexer.showDebugInfo() +\n                    '\\n' + 'expect ' + expected.join(', ');\n                throw new Error(error);\n            }\n\n            switch (action[GrammarConst.TYPE_INDEX]) {\n            case GrammarConst.SHIFT_TYPE:\n                stack.push(symbol);\n\n                valueStack.push(lexer.text);\n\n                // push state\n                stack.push(action[GrammarConst.TO_INDEX]);\n\n                // allow to read more\n                symbol = null;\n\n                break;\n\n            case GrammarConst.REDUCE_TYPE:\n                var production = productions[action[GrammarConst.PRODUCTION_INDEX]],\n                    reducedSymbol = production.symbol || production[0],\n                    reducedAction = production.action || production[2],\n                    reducedRhs = production.rhs || production[1],\n                    len = reducedRhs.length,\n                    i = 0,\n                    ret,\n                    $$ = valueStack[valueStack.length - len]; // default to $$ = $1\n\n                ret = undefined;\n\n                self.$$ = $$;\n\n                for (; i < len; i++) {\n                    self['$' + (len - i)] = valueStack[valueStack.length - 1 - i];\n                }\n\n                if (reducedAction) {\n                    ret = reducedAction.call(self);\n                }\n\n                if (ret !== undefined) {\n                    $$ = ret;\n                } else {\n                    $$ = self.$$;\n                }\n\n                stack = stack.slice(0, -1 * len * 2);\n                valueStack = valueStack.slice(0, -1 * len);\n\n                stack.push(reducedSymbol);\n\n                valueStack.push($$);\n\n                var newState = gotos[stack[stack.length - 2]][stack[stack.length - 1]];\n\n                stack.push(newState);\n\n                break;\n\n            case GrammarConst.ACCEPT_TYPE:\n                return $$;\n            }\n        }\n    };\n    return parser;\n})();\nif (typeof module !== 'undefined') {\n    module.exports = parser;\n}"],"mappings":"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E;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;MACV,CAAC;MACD,GAAG,EAAE;QACD,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;MACV,CAAC;MACD,GAAG,EAAE;QACD,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE;MACV,CAAC;MACD,IAAI,EAAE;QACF,IAAI,EAAE;MACV;IACJ,CAAC;IACD,QAAQ,EAAE;MACN,GAAG,EAAE;QACD,GAAG,EAAE,CAAC,CAAC,EAAE/F,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC;MACzB,CAAC;MACD,GAAG,EAAE;QACD,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,EAAE;MAC1B,CAAC;MACD,GAAG,EAAE;QACD,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;QACtB,GAAG,EAAE,CAAC,CAAC,EAAEA,SAAS,EAAE,CAAC;MACzB,CAAC;MACD,GAAG,EAAE;QACD,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACX,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;MACd,CAAC;MACD,GAAG,EAAE;QACD,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;MACf,CAAC;MACD,GAAG,EAAE;QACD,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE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CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;MACf,CAAC;MACD,IAAI,EAAE;QACF,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;MACf,CAAC;MACD,IAAI,EAAE;QACF,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;MACf,CAAC;MACD,IAAI,EAAE;QACF,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACZ,GAAG,EAAE,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"},"metadata":{},"sourceType":"script","externalDependencies":[]}