{"ast":null,"code":"var _jsxFileName = \"/Users/sonodaryuuichirou/Desktop/practice/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport YoutubeEmbed from \"./youtube_embed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [videoData, setVideoData] = useState(null);\n  const [url, setUrl] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Send the video URL to the Flask backend\n    const response = await fetch('http://127.0.0.1:5000/api/video-details', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url\n      })\n    });\n\n    // Retrieve the video details from the response\n    const data = await response.json();\n    setVideoData(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Video Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), videoData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: videoData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Views: \", videoData.viewCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", videoData.likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comments: \", videoData.commentCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: videoData.videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), videoData.videoId && /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n        embedId: videoData.videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"s2lDtf/dLycQ++gBc4mCb26iUVU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","YoutubeEmbed","jsxDEV","_jsxDEV","App","_s","videoData","setVideoData","url","setUrl","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","title","viewCount","likeCount","commentCount","videoId","embedId","_c","$RefreshReg$"],"sources":["/Users/sonodaryuuichirou/Desktop/practice/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport YoutubeEmbed from \"./youtube_embed\";\n\nconst App = () => {\n  const [videoData, setVideoData] = useState(null);\n  const [url, setUrl] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Send the video URL to the Flask backend\n    const response = await fetch('http://127.0.0.1:5000/api/video-details', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url }),\n    });\n\n    // Retrieve the video details from the response\n    const data = await response.json();\n    setVideoData(data);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={url} onChange={(e) => setUrl(e.target.value)} />\n        <button type=\"submit\">Get Video Details</button>\n      </form>\n\n      {videoData && (\n        <div>\n          <h2>{videoData.title}</h2>\n          <p>Views: {videoData.viewCount}</p>\n          <p>Likes: {videoData.likeCount}</p>\n          <p>Comments: {videoData.commentCount}</p>\n          <p>{videoData.videoId}</p>\n          {videoData.videoId && <YoutubeEmbed embedId={videoData.videoId} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}