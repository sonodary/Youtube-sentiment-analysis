[{"/Users/sonodaryuuichirou/Desktop/practice/src/index.js":"1","/Users/sonodaryuuichirou/Desktop/practice/src/reportWebVitals.js":"2","/Users/sonodaryuuichirou/Desktop/practice/src/App.jsx":"3","/Users/sonodaryuuichirou/Desktop/practice/src/youtube_embed.js":"4","/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/index.js":"5","/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/reportWebVitals.js":"6","/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/App.jsx":"7","/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/youtube_embed.js":"8"},{"size":535,"mtime":1689159615028,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1689159615029,"results":"11","hashOfConfig":"10"},{"size":8455,"mtime":1693937832167,"results":"12","hashOfConfig":"10"},{"size":504,"mtime":1692712832699,"results":"13","hashOfConfig":"10"},{"size":535,"mtime":1689159615028,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1689159615029,"results":"16","hashOfConfig":"15"},{"size":8455,"mtime":1693937832167,"results":"17","hashOfConfig":"15"},{"size":504,"mtime":1692712832699,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ht8nkn",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rohnug",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sonodaryuuichirou/Desktop/practice/src/index.js",[],[],[],"/Users/sonodaryuuichirou/Desktop/practice/src/reportWebVitals.js",[],[],"/Users/sonodaryuuichirou/Desktop/practice/src/App.jsx",["45","46"],[],"import React, { useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport YoutubeEmbed from \"./youtube_embed\";\nimport { Col, Row, Card, Spin } from 'antd';\nimport './App.css';\n\nconst App = () => {\n  const [videoData, setVideoData] = useState(null);\n  const [submitted, setSunmitted] =useState(false);\n  const [url, setUrl] = useState('');\n  const [comments, setComment] = useState(null);\n  const [commentsList, setCommentsList] = useState(null);\n  const [wordCloudURL, setWordCloudURL] = useState(null);\n  const [pieChartURL, setPieChartURL] = useState(null);\n  const [PieChartExtremeURL, setPieChartExtremeURL] = useState(null);\n  const [extreme, setExtreme] = useState(null)\n  const [eight, setEight] = useState(null)\n  const [filteredInfo, setFilteredInfo] = useState({});\n  const [sortedInfo, setSortedInfo] = useState({});\n//   const [column, setColumn] = useState(null)\n  const columns = [\n    {\n        title: 'コメント',\n        dataIndex:  \"comment\",\n        width: \"40%\",\n    },\n    {\n        title: 'ポジ/ネガ/中立',\n        dataIndex: \"extremeEmotion\",\n        width: \"20%\",\n        filters: [\n          {\n            text: 'Positive',\n            value: 'positive',\n          },\n          {\n            text: 'Negative',\n            value: 'negative',\n          },\n          {\n            text: 'Neutral',\n            value: 'neutral',\n          },\n        ],\n        filteredValue: filteredInfo.extremeEmotion || null,\n        onFilter: (value, record) => record.extremeEmotion.includes(value),\n        ellipsis: true\n    },\n    {\n      title: '感情分類',\n      dataIndex: \"eightEmotion\",\n      width: \"15%\",\n      filters: [\n        {\n          text: 'Sadness',\n          value: 'Sadness',\n        },\n        {\n          text: 'Anticipation',\n          value: 'Anticipation',\n        },\n        {\n          text: 'Joy',\n          value: 'Joy',\n        },\n        {\n          text: 'Fear',\n          value: 'Fear',\n        },\n        {\n          text: 'Surprise',\n          value: 'Surprise',\n        },\n        {\n          text: 'Disgust',\n          value: 'Disgust',\n        },\n        {\n          text: 'Trust',\n          value: 'Trust',\n        },\n      ],\n      filteredValue: filteredInfo.eightEmotion || null,\n      onFilter: (value, record) => record.eightEmotion.includes(value),\n    },\n    {\n      title: 'いいね数',\n      dataIndex: \"likeCount\",\n      key: \"likeCount\",\n      width: \"15%\",\n      sorter: (a, b) => a.likeCount - b.likeCount,\n      sortOrder: sortedInfo.columnKey === 'likeCount' ? sortedInfo.order : null,\n      ellipsis: true,\n    },\n  {\n    title: '投稿時間',\n    dataIndex: \"updatedAt\",\n    key: \"updatedAt\",\n    width: \"25%\",\n  }\n  ];\n\n  const handleChangeTable = (pagination, filters, sorter) => {\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSunmitted(true)\n    setVideoData(null)\n    setComment(null)\n    setCommentsList(null)\n    setEight(null)\n    // Send the video URL to the Flask backend\n    const response_video = await fetch('http://127.0.0.1:5000/api/video-details', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url }),\n    });\n\n    // Retrieve the video details from the response\n    const data = await response_video.json();\n    setVideoData(data);\n\n    const response_comment = await fetch('http://127.0.0.1:5000/api/video-comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url }),\n    })\n\n\n    // Retrieve the comment from the response\n    const comment_response = await response_comment.json();\n    const comment_response_lst = Object.values(comment_response)\n\n    const tmp = []\n    comment_response_lst.map(e => tmp.push(e.comment))\n    setComment(comment_response_lst);\n    setCommentsList(tmp);\n\n    // Emotion eight\n    const emotion_dict = new Map([['Joy',0], ['Sadness',0], ['Anticipation',0], ['Surprise',0], ['Anger',0], ['Fear',0], ['Disgust',0], ['Trust', 0]])\n    comment_response_lst.map(e => emotion_dict.set(e.eightEmotion, emotion_dict.get(e.eightEmotion)+1))\n    const emotion_tmp = []\n    for (let [key, value] of emotion_dict) {\n      emotion_tmp.push([key, value])\n    }\n    setEight(emotion_tmp);\n\n    // Emotion extreme\n    const extreme_emotion_dict = new Map([[\"positive\",0], [\"negative\",0], [\"neutral\",0]]) \n    comment_response_lst.map(e => extreme_emotion_dict.set(e.extremeEmotion, extreme_emotion_dict.get(e.extremeEmotion)+1))\n    const extreme_emotion_tmp = []\n    for (let [key, value] of extreme_emotion_dict) {\n      extreme_emotion_tmp.push([key, value])\n    }\n    setExtreme(extreme_emotion_tmp);\n    \n  };\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      const word_cloud_response = await fetch('http://127.0.0.1:5000/api/video-comments-wordCloud', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ commentsList }),\n      });\n      const blob = await word_cloud_response.blob();\n      const graphUrlCloud = URL.createObjectURL(blob);\n      setWordCloudURL(graphUrlCloud);\n    }\n    fetchImage()\n  }, [commentsList])\n\n\n  useEffect(() => {\n    const fetchPieChart = async () => {\n          const pieChart_response = await fetch('http://127.0.0.1:5000/api/comments-emotion', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ eight }),\n          });\n          const blob = await pieChart_response.blob();\n          const graphUrlPie = URL.createObjectURL(blob);\n          setPieChartURL(graphUrlPie);\n        }\n    fetchPieChart()\n  }, [wordCloudURL])\n\n  useEffect(() => {\n    const fetchPieChartExtreme = async () => {\n    const pieChart_response_extreme = await fetch('http://127.0.0.1:5000/api/comments-emotion-extreme', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ extreme }),\n      });\n      const blob = await pieChart_response_extreme.blob();\n      const graphUrlPieExtreme = URL.createObjectURL(blob);\n      setPieChartExtremeURL(graphUrlPieExtreme);\n    }\n    fetchPieChartExtreme()\n  }, [pieChartURL])\n\n\n\n  return (\n    \n    <div>\n    <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={url} size=\"45\" onChange={(e) => setUrl(e.target.value)} />\n          <button type=\"submit\">動画を検索</button>\n      </form>\n    {submitted && !(videoData && comments && commentsList && eight) && \n    <div className=\"centered\"> \n    <Spin tip=\"Loading\" size=\"large\">\n        <div className=\"content\" />\n      </Spin>\n    </div>\n      }\n    \n    {videoData && comments && commentsList && eight && (\n      <>\n        <Row type=\"flex\">  \n          <Col xs={10}>\n          <Card style={{\n            height: 400,\n          }}>\n          <h2>{videoData.title}</h2>\n          <Row>\n          <Col xs={15}>\n          {videoData.videoId && <YoutubeEmbed embedId={videoData.videoId} />}\n          </Col>\n          <Col xs={6}>\n           <li>視聴回数　: {videoData.viewCount}</li>\n           <li>いいね数　: {videoData.likeCount}</li>\n           <li>コメント数: {videoData.commentCount}</li>\n          </Col>\n          </Row>\n           </Card>\n          </Col>\n          <Col xs={7}>\n          <Card style={{\n            height: 400,\n          }}>\n          {pieChartURL && <img src={pieChartURL} alt=\"Pie Chart\" width=\"350\" height=\"350\"/>}\n          </Card>\n          </Col>\n          <Col xs={7}>\n          <Card style={{\n            height: 400,\n          }}>\n          {PieChartExtremeURL && <img src={PieChartExtremeURL} alt=\"Pie Chart\" width=\"350\" height=\"350\"/>}\n          </Card>\n          </Col>\n      </Row>\n      <Row type=\"flex\"> \n      <Col xs={15}>\n      <Card style={{\n            height: 450,\n          }}>\n      <Table\n          columns={columns}\n          dataSource={comments}\n          onChange={handleChangeTable}\n          scroll={{\n            y: 280,\n          }}\n      />\n      </Card>\n      </Col>\n      <Col xs={9}>\n      <Card style={{\n            height: 450,\n          }}>\n      {wordCloudURL && <img src={wordCloudURL} alt=\"Word Cloud\" width=\"500\" height=\"400\"/>}\n      </Card>\n      </Col>\n      </Row>\n      </>\n    )}\n    </div>\n  );\n};\n\nexport default App;\n\n\n","/Users/sonodaryuuichirou/Desktop/practice/src/youtube_embed.js",[],[],"/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/index.js",[],[],"/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/reportWebVitals.js",[],[],"/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/App.jsx",["47","48"],[],"/Users/sonodaryuuichirou/Documents/GitHub/Youtube-sentiment-analysis/src/youtube_embed.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":196,"column":6,"nodeType":"51","endLine":196,"endColumn":20,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":212,"column":6,"nodeType":"51","endLine":212,"endColumn":19,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"50","line":196,"column":6,"nodeType":"51","endLine":196,"endColumn":20,"suggestions":"55"},{"ruleId":"49","severity":1,"message":"53","line":212,"column":6,"nodeType":"51","endLine":212,"endColumn":19,"suggestions":"56"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eight'. Either include it or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has a missing dependency: 'extreme'. Either include it or remove the dependency array.",["58"],["59"],["60"],{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},{"desc":"61","fix":"65"},{"desc":"63","fix":"66"},"Update the dependencies array to be: [eight, wordCloudURL]",{"range":"67","text":"68"},"Update the dependencies array to be: [extreme, pieChartURL]",{"range":"69","text":"70"},{"range":"71","text":"68"},{"range":"72","text":"70"},[5751,5765],"[eight, wordCloudURL]",[6290,6303],"[extreme, pieChartURL]",[5751,5765],[6290,6303]]