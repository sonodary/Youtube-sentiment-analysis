import { GridStateCommunity } from '@mui/x-data-grid/models/gridStateCommunity';
import { GridColumnLookup } from '@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces';
/**
 * Get the columns state
 * @category Columns
 */
export declare const gridColumnsStateSelector: (state: GridStateCommunity) => import("@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces").GridColumnsState;
/**
 * Get an array of column fields in the order rendered on screen.
 * @category Columns
 */
export declare const gridColumnFieldsSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, string[]>;
/**
 * Get the columns as a lookup (an object containing the field for keys and the definition for values).
 * @category Columns
 */
export declare const gridColumnLookupSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, GridColumnLookup>;
/**
 * Get an array of column definitions in the order rendered on screen..
 * @category Columns
 */
export declare const gridColumnDefinitionsSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, import("@mui/x-data-grid/internals").GridStateColDef[]>;
/**
 * Get the column visibility model, containing the visibility status of each column.
 * If a column is not registered in the model, it is visible.
 * @category Visible Columns
 */
export declare const gridColumnVisibilityModelSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, import("@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces").GridColumnVisibilityModel>;
/**
 * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).
 * @category Visible Columns
 */
export declare const gridVisibleColumnDefinitionsSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, import("@mui/x-data-grid/internals").GridStateColDef[]>;
/**
 * Get the field of each visible column.
 * @category Visible Columns
 */
export declare const gridVisibleColumnFieldsSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, string[]>;
/**
 * Get the left position in pixel of each visible columns relative to the left of the first column.
 * @category Visible Columns
 */
export declare const gridColumnPositionsSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, number[]>;
/**
 * Get the summed width of all the visible columns.
 * @category Visible Columns
 */
export declare const gridColumnsTotalWidthSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, number>;
/**
 * Get the filterable columns as an array.
 * @category Columns
 */
export declare const gridFilterableColumnDefinitionsSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, import("@mui/x-data-grid/internals").GridStateColDef[]>;
/**
 * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).
 * @category Columns
 */
export declare const gridFilterableColumnLookupSelector: import("@mui/x-data-grid/utils/createSelector").OutputSelector<GridStateCommunity, GridColumnLookup>;
